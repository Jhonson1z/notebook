import{_ as s,c as n,o as a,N as l}from"./chunks/framework.9fe2e29c.js";const p="/notebook/assets/BUG_EXPLAIN.excalidraw.f4daadd4.png",e="/notebook/assets/FINISH.excalidraw.96f68afc.png",o="/notebook/assets/WHAT_IS_NGINX_CHATGPT.3b748410.png",c="/notebook/assets/WHAT_IS_NGINX_WIKI.93bd5009.png",r="/notebook/assets/NGINX_CONFIG.excalidraw.c411365e.png",F=JSON.parse('{"title":"一场事故，让我认识了 Nginx！","description":"","frontmatter":{},"headers":[],"relativePath":"my-review/md/nginx-config.md"}'),t={name:"my-review/md/nginx-config.md"},i=l('<h1 id="一场事故-让我认识了-nginx" tabindex="-1">一场事故，让我认识了 Nginx！ <a class="header-anchor" href="#一场事故-让我认识了-nginx" aria-label="Permalink to &quot;一场事故，让我认识了 Nginx！&quot;">​</a></h1><h1 id="缘起" tabindex="-1">缘起 <a class="header-anchor" href="#缘起" aria-label="Permalink to &quot;缘起&quot;">​</a></h1><blockquote><p>在一个风和日丽的下午，我正痴迷于带薪学习的快乐中而不可自拔，不曾想被一个从天而降的 BUG 打断了我的<s>摸鱼</s>学习时光。但当我定睛一看，好家伙，这 BUG 它不一般呐！</p><p>下面是 BUG 描述 👇 <img src="'+p+`" alt="BUG描述"></p><p>WTF！还有这种事？！😨 吓得我赶紧打开 vscode 看是不是哪里写多了跳转逻辑，但是一通排查后并没有发现异常，最后只能使出清空大法使服务器中只保留<code>index.html</code>文件，但是 BUG 还是存在 😭</p><p>到这里就已经基本可以确定不是前端的问题了，于是乎我打开服务器的 NGINX 配置正打算用我的<s>火眼金睛</s>“四只眼睛”将其中的妖魔鬼怪一把揪出时，才发现<strong>我不会 NGINX 配置</strong>😭！</p><p>在折腾一通配置文件又猛翻官方文档，甚至于把<code>chatgpt老师</code>都快问红温了之后问题还是没有解决，走投无路之下只得求助于大佬，想不到大佬十几分钟的操作就解决了问题！</p><p>个人理解是由于<strong>服务器的 Nginx 配置中缺少了对<code>bigScreen</code>文件路径的匹配规则</strong>，也就是下面的代码 👇 (如果理解有误恳请指出，感激不尽)</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/bigScreen </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>于是乎我只需要在前端调用<code>window.open</code>时在路径后加上<code>/</code>来提示 NGINX 是要到根目录下查询 index.html 文件即可，解决后的访问结果如下 👇 <img src="`+e+'" alt="访问结果"></p></blockquote><h1 id="认识nginx" tabindex="-1">认识<code>Nginx</code> <a class="header-anchor" href="#认识nginx" aria-label="Permalink to &quot;认识`Nginx`&quot;">​</a></h1><p>经此一事，我认识到了自己对 Nginx 知识的匮乏，于是乎将我从官方文档和<code>chatgpt老师</code>那学习的知识点整理了一下，便有了这篇文章</p><blockquote><p>PS: 本文主要对 Nginx 的<code>http_server</code>配置进行讲述，如果你想找的是从 0 开始在服务器配置<code>Nginx</code>的方案，可以查阅<a href="https://tutorials.tinkink.net/zh-hans/nginx/nginx-static-file-server.html" target="_blank" rel="noreferrer">如何使用 Nginx 搭建静态文件服务器</a>，希望了解更详细的配置，请前往<a href="https://nginx.org/en/docs/" target="_blank" rel="noreferrer">官方文档</a>查阅</p></blockquote><h2 id="到底什么是nginx" tabindex="-1">到底什么是<code>Nginx</code> <a class="header-anchor" href="#到底什么是nginx" aria-label="Permalink to &quot;到底什么是`Nginx`&quot;">​</a></h2><p>下面是来自<code>chatgpt老师</code>的回答 👇 <img src="'+o+'" alt="What is Nginx from chatgpt"></p><p>下面是来自<code>维基百科</code>的回答 👇 <img src="'+c+'" alt="What is Nginx from Wikipedia"></p><blockquote><p>由此可以得出结论：<code>Nginx</code>作为轻量级的 Web 服务器，可以胜任绝大部分网站的代理工作，甚至可以用来做<code>负载均衡服务器</code>，其内存少、稳定性高、配置简单的优势使其脱颖而出</p></blockquote><h2 id="应该如何使用nginx" tabindex="-1">应该如何使用<code>Nginx</code> <a class="header-anchor" href="#应该如何使用nginx" aria-label="Permalink to &quot;应该如何使用`Nginx`&quot;">​</a></h2><p>想要使用<code>Nginx</code>，首先最重要的，是需要一个服务器 🐶(废话)。现在假设已经有了一个服务器，已经将打包后的前端文件上传到了服务器上，并且已经在服务器安装了<code>Nginx</code>，那该如何编写<code>Nginx配置</code>让<code>Nginx</code>可以正确返回请求的文件？</p><p>下面是一个<code>Nginx配置文件</code>的基础配置描述 👇 <img src="'+r+`" alt="Nginx配置Map"></p><p>下面是一份带注释的基础<code>Nginx配置</code>👇</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 监听 HTTP 和 HTTPS 端口</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl http2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 定义 server_name 这里是你的域名或ip，且支持正则匹配以及多规则匹配</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">example.com www.example.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># server_name *.example.com www.example.*;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 可匹配: 1.所有以example.com为后缀的域名 2.所有以www.example为前缀的域名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># server_name .example.com;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 可匹配所有以example.com为后缀的域名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># server_name ~^www\\d+\\.example\\.com$;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 以 ~ 标记为正则表达式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># server_name ~^(www\\.)?(?&lt;domain&gt;.+)$;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 允许将匹配到的 domain 值作为变量用于后面的Nginx配置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># server_name _;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 用于匹配所有域名。需要注意的是，通常作为最后一个server块的匹配规则存在，但不可只使用该配置项匹配</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 配置 SSL</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_certificate </span><span style="color:#A6ACCD;">/path/to/cert.crt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># SSL证书的路径，必须与 ssl_certificate_key 配合使用</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> ssl_certificate_key </span><span style="color:#A6ACCD;">/path/to/key.key</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># SSL密钥文件的路径</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 定义 location 区域</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 不带参数的url匹配规则，将匹配所有的请求url，并使用下面的配置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># alias /data/w3/images/;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># url别名，如果url为\`/i/img.png\`将被转换为\`/data/w3/images/img.png\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/data/w3/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 直接决定url的根目录，\`/i/img.png\`将被转换为\`/data/w3/i/images/img.png\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 默认文档名称，当客户端请求\`www.example.com\`时，将默认返回\`/data/w3/index.html\`文件或\`/data/w3/index.htm\`文件</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 如果没有文件匹配则根据其他规则处理</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> try_files $</span><span style="color:#A6ACCD;">uri </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri/ /index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 在文件系统中查询文件</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 如果$url对应的文件存在则直接返回该文件；如果不存在则返回$url/下的index.html文件；否则返回根目录下的/index.html文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 开启反向代理</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#A6ACCD;">http://backend</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 将请求转发至http://backend服务器处理，并返回代理服务器的响应</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 定义反向代理头部</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Real-IP </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#A6ACCD;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_host</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 定义代理请求头，可以在这里对请求头做校验工作</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 配置 HTTPS 重定向</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">scheme </span><span style="color:#89DDFF;">!= </span><span style="color:#C3E88D;">&quot;https&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">301</span><span style="color:#F07178;"> https://</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">server_name</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># $scheme以变量形式存储请求是否为SSL，更多变量可以查看 http://nginx.org/en/docs/http/ngx_http_core_module.html#variables</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 定义 error_page 区域</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">404 /404.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 当出现404错误时，跳转至404.html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/404.html </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">internal;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 表示404页面只有当出现404错误时才会出现，并且由Nginx进行内部跳转，即使修改url也无法进入404页面</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 你可以使用多个server块来匹配多个host</span></span>
<span class="line"><span style="color:#A6ACCD;">        ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div><h1 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记" aria-label="Permalink to &quot;后记&quot;">​</a></h1><p>这一次的事故虽然花了不少时间处理，但总的来说还是有收获的，而且了解Nginx对于前端从事人员来说也是很重要的一环，之后我也会更加深入的学习Nginx，并且多进行实践。</p><blockquote><p>PS: 笔者在写本文时尚处于Nginx小白阶段，如果文中有任何错误，烦请在评论中指出，我会尽快进行修改，感激不尽！</p></blockquote>`,18),y=[i];function b(C,A,m,D,d,u){return a(),n("div",null,y)}const h=s(t,[["render",b]]);export{F as __pageData,h as default};
